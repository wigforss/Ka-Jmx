<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://kasource.org/schema/ka-jmx" 
	xmlns="http://kasource.org/schema/ka-jmx"
	elementFormDefault="qualified">
	
	<xs:element name="configuration">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="dashboard" minOccurs="1" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="dashboard">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="panel" minOccurs="1" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="baseWidth" type="xs:int" use="required"/>
			<xs:attribute name="baseHeight" type="xs:int" use="required"/>
			<xs:attribute name="id" type="xs:ID" use="required"/>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="panel">
		<xs:complexType>
			<xs:sequence>
				<xs:choice>
					<xs:element ref="graph" minOccurs="1" maxOccurs="1"/>
					<xs:element ref="textGroup" minOccurs="1" maxOccurs="1"/>
					<xs:element ref="gauge" minOccurs="1" maxOccurs="1"/>
					<xs:element ref="pie" minOccurs="1" maxOccurs="1"/>
					<xs:element ref="ledPanel" minOccurs="1" maxOccurs="1"/>
					<xs:element ref="trafficLight" minOccurs="1" maxOccurs="1"/>
					<xs:element ref="heatMap" minOccurs="1" maxOccurs="1"/>
				</xs:choice>
			</xs:sequence>
			<xs:attribute name="id" type="xs:ID" use="required"/>
			<xs:attribute name="title" type="xs:string" use="required"/>
			<xs:attribute name="row" type="xs:int" use="required"/>
			<xs:attribute name="column" type="xs:int" use="required"/>
			<xs:attribute name="width" type="xs:int"  default="1"/>
			<xs:attribute name="height" type="xs:int" default="1"/>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="graph">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="dataSeries" type="attributeValue" minOccurs="1" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:ID" use="required"/>
			<xs:attribute name="title" type="xs:string" use="optional"/>
			<xs:attribute name="yAxisLabel" type="xs:string" use="optional"/>
			<xs:attribute name="samples" type="xs:int" use="optional" default="30"/>
			<xs:attribute name="decimals" type="xs:int" use="optional" default="2"/>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="pie">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="dataSeries" type="attributeValue" minOccurs="1" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:ID" use="required"/>
			<xs:attribute name="title" type="xs:string" use="optional"/>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="trafficLight">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="red" type="attributeValue" minOccurs="1" maxOccurs="1"/>
				<xs:element name="yellow" type="attributeValue" minOccurs="1" maxOccurs="1"/>
				<xs:element name="green" type="attributeValue" minOccurs="1" maxOccurs="1"/>
				<xs:element name="value" type="attributeValue" minOccurs="1" maxOccurs="1"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:ID" use="required"/>
			<xs:attribute name="suffix" type="xs:string" use="optional"/>
			<xs:attribute name="prefix" type="xs:string" use="optional"/>
			<xs:attribute name="title" type="xs:string" use="optional"/>
			<xs:attribute name="state" type="trafficLightState" use="optional"/>
			<xs:attribute name="ascending" type="xs:boolean" use="optional" default="true"/>
			<xs:attribute name="attributeType" type="attributeType" use="required"/>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="ledPanel">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="data" type="attributeValue" minOccurs="1" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:ID" use="required"/>
			<xs:attribute name="layout" type="layoutType" use="optional" default="horizontal"/>
			<xs:attribute name="showLabels" type="xs:boolean" default="true"/>
			<xs:attribute name="color" type="xs:string" use="optional" default="#00FF00">
				<xs:annotation>
					<xs:documentation>
						Color of LED lights, will default to green if not set. Use Hex colors with leading # character. 
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="attribute">
		<xs:complexType>
			<xs:attribute name="objectName" type="xs:string" use="required"/>
			<xs:attribute name="attribute" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="textGroup">
		<xs:complexType>
			<xs:sequence>
					<xs:element name="value" type="attributeValue" minOccurs="1" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:ID" use="required"/>
			<xs:attribute name="title" type="xs:string" use="optional"/>
			
		</xs:complexType>
	</xs:element>
	
	<xs:element name="gauge">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="min" type="attributeValue" minOccurs="1" maxOccurs="1"/>
				<xs:element name="max" type="attributeValue" minOccurs="1" maxOccurs="1"/>
				<xs:element name="value" type="attributeValue" minOccurs="1" maxOccurs="1"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:ID" use="required"/>
			<xs:attribute name="title" type="xs:string" use="optional"/>
			<xs:attribute name="decimals" type="xs:int" use="optional" default="2"/>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="heatMap">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="heatRow" minOccurs="1" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="id" type="xs:ID" use="required"/>
			<xs:attribute name="showLegend" type="xs:boolean" use="optional" default="true"/>
			<xs:attribute name="legendLayout" type="layoutType" use="optional" default="vertical"/>
			<xs:attribute name="colorSchema" type="colorSchemaType" use="optional" default="heat_map"/>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="heatRow">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="heatCell" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="heatCell">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="normalizationFunction" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="data" type="attributeValue" minOccurs="1" maxOccurs="1"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:complexType name="attributeValue">
			<xs:sequence>
				<xs:element ref="attribute" minOccurs="0" maxOccurs="1"/>
				<xs:element name="value" type="xs:anyType" minOccurs="0" maxOccurs="1"/>
				<xs:element name="jsFunction" type="xs:string" minOccurs="0" maxOccurs="1"/>
			
			</xs:sequence>
			<xs:attribute name="label" type="xs:string" use="optional"/>
			<xs:attribute name="subscribe" type="xs:boolean" use="optional" default="true"/>
			<xs:attribute name="type" type="valueType" use="optional" default="text"/>
			<xs:attribute name="visible" type="xs:boolean" use="optional" default="true"/>
		</xs:complexType>
	

	<xs:simpleType name="valueType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="text"/>
            <xs:enumeration value="json"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="attributeType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="numeric"/>
            <xs:enumeration value="text"/>
            <xs:enumeration value="boolean"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="layoutType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="horizontal"/>
            <xs:enumeration value="vertical"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="trafficLightState">
        <xs:restriction base="xs:string">
            <xs:enumeration value="red"/>
            <xs:enumeration value="yellow"/>
            <xs:enumeration value="green"/>
        </xs:restriction>
    </xs:simpleType>
    
     <xs:simpleType name="colorSchemaType">
        <xs:restriction base="xs:string">
         	<xs:enumeration value="heat_map"/>
            <xs:enumeration value="green_to_red"/>
            <xs:enumeration value="bolivia"/>
            <xs:enumeration value="mexico"/>
            <xs:enumeration value="gray"/>
        </xs:restriction>
    </xs:simpleType>
	
</xs:schema>